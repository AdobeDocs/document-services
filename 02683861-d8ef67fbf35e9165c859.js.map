{"version":3,"sources":["webpack://dev-site-product-template/./src/@adobe/gatsby-theme-aio/components/ProductCardGrid/index.js"],"names":["additionalFilters","title","value","filter","products","sort","lastUpdatedA","lastUpdated","lastUpdatedB","Date","nameA","name","nameB","localeCompare","ids","filteredProducts","forEach","productId","product","find","id","push","ProductCardGrid","clouds","interaction","orderBy","filterByCloud","filterByIds","buttonName","showName","showDescription","showBorder","imgHeight","isCentered","className","theme","length","defaultFilter","useState","additionalFilter","setAdditionalFilter","setFilteredProducts","cloudFilter","setCloudFilter","useEffect","cloud","some","selectedCloud","selectedFilter","filterByClouds","height","width","classNames","css","MOBILE_SCREEN_WIDTH","layoutColumns","TABLET_SCREEN_WIDTH","DESKTOP_SCREEN_WIDTH","isQuiet","items","slice","map","selected","onChange","index","i","key","checked","role","tabIndex","icon","src","alt","description","discover","A","href","variant","docs"],"mappings":"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","file":"02683861-d8ef67fbf35e9165c859.js","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// TODO reuse ProductCard\n\nimport React, { useState, useEffect } from \"react\";\nimport { css } from \"@emotion/react\";\nimport { AnchorButton } from \"@adobe/gatsby-theme-aio/src/components/AnchorButton\";\nimport { Checkbox } from \"@adobe/gatsby-theme-aio/src/components/Checkbox\";\nimport { Picker } from \"@adobe/gatsby-theme-aio/src/components/Picker\";\nimport \"@spectrum-css/typography\";\nimport \"@spectrum-css/card\";\nimport { Image } from \"../Image\";\nimport classNames from \"classnames\";\n\nimport { DESKTOP_SCREEN_WIDTH,MOBILE_SCREEN_WIDTH,TABLET_SCREEN_WIDTH,layoutColumns} from \"@adobe/gatsby-theme-aio/src/utils\";\nimport PropTypes from \"prop-types\";\n\nconst filterByClouds = (\n  products,\n  cloudFilter,\n  additionalFilter,\n  setFilteredProducts\n) => {\n  const filteredProducts = products.filter(({ cloud }) =>\n    cloudFilter.some((selectedCloud) => cloud === selectedCloud)\n  );\n  const selectedFilter = additionalFilters.find(\n    ({ value }) => value === additionalFilter\n  );\n\n  setFilteredProducts(\n    selectedFilter.filter(filteredProducts, selectedFilter.ids)\n  );\n};\n\nconst filterByName = (products) =>\n  products.sort(({ name: nameA }, { name: nameB }) =>\n    nameA.localeCompare(nameB)\n  );\n\nconst filterByLastUpdated = (products) =>\n  products.sort(\n    ({ lastUpdated: lastUpdatedA }, { lastUpdated: lastUpdatedB }) => {\n      if (new Date(lastUpdatedB) > new Date(lastUpdatedA)) {\n        return 1;\n      } else if (new Date(lastUpdatedB) < new Date(lastUpdatedA)) {\n        return -1;\n      }\n      return 0;\n    }\n  );\n\nconst filterById = (products, ids = []) => {\n  const filteredProducts = [];\n  ids.forEach((productId) => {\n    const product = products.find(({ id }) => id === productId);\n    if (product) {\n      filteredProducts.push(product);\n    }\n  });\n  return filteredProducts;\n};\n\nconst additionalFilters = [\n  {\n    title: \"Last updated\",\n    value: \"last_updated\",\n    filter: filterByLastUpdated,\n  },\n  {\n    title: \"Name\",\n    value: \"name\",\n    filter: filterByName,\n  },\n  {\n    title: \"Custom\",\n    value: \"id\",\n    filter: filterById,\n  },\n];\n\nconst ProductCardGrid = ({\n  clouds = [],\n  products = [],\n  interaction = false,\n  orderBy = \"last_updated\",\n  filterByCloud = [],\n  filterByIds = [],\n  buttonName = \"Learn more\",\n  showName = true,\n  showDescription = true,\n  showBorder = true,\n  imgHeight = \"1000\",\n  isCentered = false,\n  className,\n  theme=\"light\"\n}) => {\n  if (filterByIds.length) {\n    orderBy = \"id\";\n  }\n\n  const defaultFilter = additionalFilters.find(\n    ({ value }) => value === orderBy\n  );\n  defaultFilter.ids = filterByIds;\n\n  const [additionalFilter, setAdditionalFilter] = useState(defaultFilter.value);\n  const [filteredProducts, setFilteredProducts] = useState(\n    defaultFilter.filter(products, defaultFilter.ids)\n  );\n  const [cloudFilter, setCloudFilter] = useState(filterByCloud);\n\n  useEffect(() => {\n    filterByClouds(\n      products,\n      cloudFilter.length ? cloudFilter : clouds,\n      additionalFilter,\n      setFilteredProducts\n    );\n  }, [cloudFilter, additionalFilter, products, clouds]);\n\n  const height =\n    \"calc(var(--spectrum-global-dimension-size-5000) - var(--spectrum-global-dimension-size-600))\";\n  const width =\n    \"calc(var(--spectrum-global-dimension-size-3600) - var(--spectrum-global-dimension-size-900))\";\n\n  return (\n    <section\n      className={classNames(className, `spectrum--${theme}`)}\n      css={css`\n        background: var(--spectrum-global-color-gray-100);\n        padding-bottom: var(--spectrum-global-dimension-size-500);\n\n          \n        @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n          width: ${layoutColumns(2)}  !important;\n          background: var(--spectrum-global-color-gray-100);\n          padding-bottom: 0;\n        }\n\n        @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) and (min-width: ${MOBILE_SCREEN_WIDTH}) {\n          width:100% !important;\n          background: var(--spectrum-global-color-gray-100);;\n          padding-bottom: 0;\n        }\n   \n\n      `}\n\n    >\n      <div \n      css={css`\n      max-width: ${DESKTOP_SCREEN_WIDTH};\n      margin: auto;\n\n       @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n          width: ${layoutColumns(3)} !important;\n          background:var(--spectrum-global-color-gray-100);\n        }\n\n\n      `}>\n      {interaction && (\n        <div\n          css={css`\n            display: flex;\n            align-items: center;\n            height: var(--spectrum-global-dimension-size-800);\n            justify-content: flex-end;\n            margin-right: var(--spectrum-global-dimension-size-400);\n            \n          `}\n        >\n          <Picker\n            isQuiet\n            items={additionalFilters.slice(0, 2).map((filter) => {\n              return filter.value === orderBy\n                ? {\n                    selected: true,\n                    ...filter,\n                  }\n                : filter;\n            })}\n            aria-label=\"Filter by name or last updated product\"\n            onChange={(index) => {\n              setAdditionalFilter(additionalFilters[index].value);\n            }}\n          />\n        </div>\n      )}\n      <div\n        css={css`\n          display: flex;\n          @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n            align-items: flex-start;\n            flex-wrap: wrap;\n          }\n        `}\n      >\n        {interaction && (\n          <div\n            css={css`\n              display: flex;\n              align-items: flex-end;\n              width: var(--spectrum-global-dimension-size-3000);\n              flex-direction: column;\n            `}\n          >\n            <div\n              css={css`\n                display: flex;\n                align-items: flex-start;\n                flex-direction: column;\n              `}\n            >\n              <h4\n                className=\"spectrum-Heading spectrum-Heading--sizeXS\"\n                css={css`\n                  margin-bottom: var(--spectrum-global-dimension-size-100);\n                `}\n              >\n                Filter by\n              </h4>\n\n              <div\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-100);\n                  display: flex;\n                  flex-direction: column;\n                `}\n              >\n                {clouds.map((cloud, i) => (\n                  <Checkbox\n                    key={i}\n                    value={cloud}\n                    onChange={(checked) => {\n                      if (checked) {\n                        setCloudFilter([...cloudFilter, cloud]);\n                      } else {\n                        setCloudFilter(\n                          cloudFilter.filter((filter) => filter !== cloud)\n                        );\n                      }\n                    }}\n                    css={css`\n                      margin-bottom: var(--spectrum-global-dimension-size-100);\n                    `}\n                  >\n                    {cloud}\n                  </Checkbox>\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n        <div\n          css={css`\n            flex: 1;\n          `}\n        >\n          <div\n            css={css`\n              display: grid;\n              grid-template-columns: repeat(auto-fit, ${width});\n              grid-auto-rows: ${height};\n              justify-content: center;\n              gap: var(--spectrum-global-dimension-size-400);\n\n              @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                margin-top: var(--spectrum-global-dimension-size-400);\n                display: flex;\n                flex-wrap: wrap;\n              }\n      \n              @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                overflow: hidden;\n                width: ${layoutColumns(3)};\n                background: var(--spectrum-global-color-gray-100);\n             }\n            `}\n          >\n            {filteredProducts.map((product) => (\n              <div\n                key={product.id}\n                role=\"figure\"\n                tabIndex=\"0\"\n                className=\"spectrum-Card\"\n                css={css`\n                  width: ${width};\n                  height: ${height};\n                  border: ${showBorder\n                    ? \"none\"\n                    : \"var(--spectrum-global-color-gray-200)\"};\n                    background: var(--spectrum-global-color-gray-100);\n                  align-items: center;\n                  &:hover {\n                    border-color: var(--spectrum-global-color-gray-200);\n                  }\n\n                  @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                    width: 0;\n                  }\n                `}\n              >\n                <div\n                  className=\"spectrum-Card-body\"\n                  css={css`\n                    height: var(--spectrum-global-dimension-size-4000);\n                    overflow: auto;\n                    padding-top: 0;\n                    padding-bottom: 0;\n                    align-items: center;\n                    display: flex;\n                    flex-direction: column;\n                   \n                  `}\n                >\n                  {product.icon && (\n                    <div\n                      css={css`\n                        height: var(\n                          --spectrum-global-dimension-size-${imgHeight}\n                        );\n                        width: 140px;\n                        margin-bottom: var(\n                          --spectrum-global-dimension-size-200\n                        );\n                      `}\n                    >\n                      <Image\n                        src={product.icon}\n                        aria-hidden=\"true\"\n                        alt={product.name}\n                      />\n                    </div>\n                  )}\n                  {showName && (\n                    <div\n                      className=\"spectrum-Card-header spectrum-Heading spectrum-Heading--sizeXS\"\n                      css={css`\n                        height: var(--spectrum-global-dimension-size-600);\n                        justify-content: center;\n                        align-items: center;\n                        margin-top: 0 !important;\n                        margin-bottom: var(\n                          --spectrum-global-dimension-size-100\n                        ) !important;\n                      `}\n                    >\n                      <div\n                        className=\"spectrum-Card-title\"\n                        css={css`\n                          font-size: var(--spectrum-global-dimension-size-200);\n                          padding-right: 0;\n                        `}\n                      >\n                        <strong>{product.name}</strong>\n                      </div>\n                    </div>\n                  )}\n                  {showDescription && (\n                    <div\n                      className=\"spectrum-Card-content spectrum-Body spectrum-Body--sizeS\"\n                      css={css`\n                        height: auto;\n                        margin-bottom: 0 !important;\n                      `}\n                    >\n                      {product.description}\n                    </div>\n                  )}\n                </div>\n                <div\n                  className={showBorder ? \"spectrum-Card-footer\" : \"\"}\n                  css={css`\n                    display: flex;\n                    justify-content: ${isCentered ? \"center\" : \"flex-end\"};\n                    flex-wrap: wrap;\n                    // --gap: var(--spectrum-global-dimension-size-200);\n                    // margin: calc(-1 * var(--gap)) 0 0 calc(-1 * var(--gap));\n                    // width: calc(100% + var(--gap));\n\n                    @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                      justify-content: center;\n                    }\n\n                    padding-top: 0;\n                    padding-bottom: 0;\n                  `}\n                >\n                  {product.discover && (\n                    <div\n                      css={css`\n                        margin: var(--gap) 0 0 var(--gap);\n                      `}\n                    >\n                      <AnchorButton\n                        isQuiet\n                        href={product.discover}\n                        variant=\"primary\"\n                        css={css`\n                          border-color: #4b4b4b !important;\n                          border-width: 2px;\n                        `}\n                      >\n                        {buttonName}\n                      </AnchorButton>\n                    </div>\n                  )}\n\n                  {product.docs && (\n                    <div\n                      css={css`\n                        margin: var(--gap) 0 0 var(--gap);\n                      `}\n                    >\n                      <AnchorButton href={product.docs} variant=\"primary\">\n                        View docs\n                      </AnchorButton>\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      </div>\n    </section>\n  );\n};\n\nProductCardGrid.propTypes = {\n  clouds: PropTypes.array,\n  products: PropTypes.array,\n  orderBy: PropTypes.string,\n  filterBy: PropTypes.array,\n  interaction: PropTypes.bool,\n  showName: PropTypes.bool,\n  showDescription: PropTypes.bool,\n  isCentered: PropTypes.bool,\n  showBorder: PropTypes.bool,\n  imgHeight: PropTypes.string,\n};\n\nexport { ProductCardGrid };\n"],"sourceRoot":""}