{"version":3,"file":"8bb409fd-1fa294b6300073f14336.js","mappings":"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","sources":["webpack://dev-site-product-template/./src/@adobe/gatsby-theme-aio/components/Tabs/index.js"],"sourcesContent":["import React, { useEffect, useState, useRef, createRef, forwardRef, cloneElement } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { css } from '@emotion/react';\n// import nextId from 'react-id-generator';\nimport '@spectrum-css/tabs';\n\nimport { cloneChildren, MOBILE_SCREEN_WIDTH, TABLET_SCREEN_WIDTH, layoutColumns } from '@adobe/gatsby-theme-aio/src/utils';\n\nimport {  DESKTOP_SCREEN_WIDTH } from \"../../../../utils\";\n\nconst positionIndicator = (indicator, selectedTab) => {\n  indicator.current.style.transform = `translate(${selectedTab.current.offsetLeft}px, 0px)`;\n  indicator.current.style.width = `${selectedTab.current.offsetWidth}px`;\n};\n\nconst animateIndicator = (indicator, animate) => {\n  indicator.current.style.transition = animate ? '' : 'none';\n};\n\nconst setTabItemIcon = (child, className, iconSize) => {\n  if ( child?.props?.children?.props?.mdxType === 'img') {\n    return <IconImage image={child} className={classNames(className, `spectrum-Icon--spectrum-icon-size-${iconSize}`)}/>;\n  }\n  return <Icons icon={child} className={classNames(className, `spectrum-Icon--spectrum-icon-size-${iconSize}`)}/>;\n};\n\nconst mobileMinWidth = '480px';\nconst MAX_MOBILE_SCREEN_WIDTH = '767px';\n\nconst setImageLoading = (child) => {\n  if (child?.props?.mdxType === 'img') {\n    return cloneElement(child, {\n      loading: 'eager'\n    });\n  }\n  return child;\n};\n\nconst IconImage = ({ image = '', styles=''}) => {\n  return (image\n    ? cloneElement(image, {\n        children: cloneChildren(image.props.children, setImageLoading),\n        css: css`\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          height: 100%;\n          width: 100%;\n          margin-top: var(--spectrum-global-dimension-size-0);\n\n          img {\n            display: block;\n            object-fit: contain;\n          }\n          ${styles}\n        `,\n      })\n    : null);\n  }\n\nconst Icons = ({ icon, styles }) => {\n  return(\n    icon\n      ? cloneElement(icon, {\n        alt:'',\n        css: css`\n          height: var(--spectrum-global-dimension-size-600);\n          width: var(--spectrum-global-dimension-size-600);\n          margin-top: var(--spectrum-global-dimension-size-0);\n\n          img {\n            display: block;\n            object-fit: contain;\n          }\n          ${styles}\n        `\n      })\n      : null\n  )\n}\n\nconst Tabs = forwardRef(({\n  orientation='horizontal',\n  density='regular',\n  isQuiet = true,\n  children,\n  className,\n  onFontsReady,\n  ...props },\n  ref) => {\n\n  useEffect(() => {\n    // Font affects positioning of the Tab indicator\n    document.fonts.ready.then(() => {\n      onFontsReady && onFontsReady();\n    });\n  }, [onFontsReady]);\n\n  return (\n    <div\n      ref={ref}\n      {...props}\n      role='tablist'\n      aria-orientation={orientation}\n      className={classNames(className, 'spectrum-Tabs', `spectrum-Tabs--${orientation}`, { 'spectrum-Tabs--quiet' : isQuiet }, { 'spectrum-Tabs--compact': density === 'compact' })}\n    >\n      {children}\n    </div>\n  );\n});\n\nconst Item = forwardRef(({\n  elementType = 'div',\n  isDisabled=false,\n  isSelected=false,\n  className,\n  children,\n  icon,\n  label,\n  ...props }, ref\n) => {\n  const Element = elementType;\n  // const id = nextId();\n  return (\n    <Element\n      {...props}\n      ref={ref}\n      role='tab'\n      title={label?.props?.children}\n      aria-selected={isSelected}\n      disabled={isDisabled}\n      className={classNames(className, 'spectrum-Tabs-item', { 'is-selected': isSelected }, { 'is-disabled': isDisabled })}>\n      {icon ? <TabItemIcon icon={icon} isSelected={isSelected} isDisabled={isDisabled}></TabItemIcon> : null }\n      {label ? <Label> {label} </Label>: null}\n      {children}\n    </Element>\n  );\n});\n\nconst TabItemIcon = forwardRef(({\n  elementType = 'div',\n  icon,\n  isSelected,\n  isDisabled,\n  className,\n  children,\n  iconSize='xl',\n  ...props }, ref) => {\n  const Element = elementType;\n  return (\n    <Element\n      {...props}\n      ref={ref}\n      className={classNames(className, 'spectrum-Icon', { 'is-selected': isSelected }, { 'is-disabled ': isDisabled })}\n      css={css`\n        height: var(--spectrum-global-dimension-size-600);\n        width: var(--spectrum-global-dimension-size-550);\n        z-index: 1;\n      `}\n      >\n      {icon ? setTabItemIcon(icon, className, iconSize) : null}\n    </Element>\n  );\n});\n\nconst TabsIndicator = forwardRef(({ className, ...props }, ref) => {\n  return (\n    <div\n      {...props}\n      ref={ref}\n      className={classNames(className, 'spectrum-Tabs-selectionIndicator')}\n      css={css`\n      transition-property: transform, width;\n    `}></div>\n  );\n});\n\nconst CodeTabIndicator = forwardRef(({ className,index=0, ...props }, ref) => {\n  return (\n    <div\n      {...props}\n      ref={ref}\n      className={classNames(className, 'spectrum-Tabs-selectionIndicator',{\"default\":index ===0})}\n      css={css`\n      transition-property: transform, width;\n    `}></div>\n  );\n});\n\nconst Label = ({ children }) => <span className='spectrum-Tabs-itemLabel'>{children}</span>;\n\nconst HeaderTabItem = forwardRef(({\n  elementType = 'div',\n  isDisabled=false,\n  isSelected=false,\n  className,\n  children,\n  icon,\n  hasDropdown=false,\n  label,\n  ...props }, ref\n) => {\n  const Element = elementType;\n  return (\n    <Element\n      {...props}\n      ref={ref}\n      role='tab'\n      title={label?.props?.children}\n      aria-selected={isSelected}\n      autofocus={true}\n      tabIndex=\"0\"\n      onKeyDown={(e)=>{\n          if(e.key===\"ArrowRight\"){\n          if(props.id===\"tabindex5\"){\n           document.getElementById(\"getCredentialID\").focus();\n          }\n          e.target.nextElementSibling && e.target.nextElementSibling.focus();\n        }\n        if(e.key===\"ArrowLeft\"){\n          if(props.id===\"tabindex0\"){\n              document.getElementById(\"product\")?.focus();\n            }else{\n              e.target.previousElementSibling && e.target.previousElementSibling.focus();\n            }\n          }\n          if(e.key===\"ArrowDown\"){\n                    e.preventDefault();    \n            if(hasDropdown){\n              props?.openDropDown && props?.openDropDown({index:props.index,isOpen:true,id:props.id});\n            }else{\n              e.target.nextElementSibling && e.target.nextElementSibling.focus();\n            }\n          }\n          if(e.key===\"ArrowUp\"){\n            \n            console.log(\"arrowuped\",);\n            props?.openDropDown && props?.openDropDown({isOpen:false,id:props.id});\n            e.target.previousElementSibling && e.target.previousElementSibling.focus();\n          }\n      }}\n      disabled={isDisabled}\n      className={classNames(className, 'spectrum-Tabs-item', { 'is-selected': isSelected }, { 'is-disabled': isDisabled })}>\n      {icon ? <TabItemIcon icon={icon} isSelected={isSelected} isDisabled={isDisabled}></TabItemIcon> : null }\n      {label ? <Label> {label} </Label>: null}\n      {children}\n    </Element>\n  );\n});\n\nconst TabView = forwardRef(({ elementType = 'div', isHidden, className, children, ...props }, ref) => {\n  const Element = elementType;\n  return (\n    <Element\n      {...props}\n      ref={ref}\n      hidden={isHidden}\n      className={classNames(className)}>\n      {children}\n    </Element>\n  );\n});\n\nconst TabsBlock = ({\n  theme='light',\n  orientation='horizontal',\n  className,\n  APIReference = \"\",\n  ...props\n}) => {\n\n  const [tabs] = useState([]);\n  const selectedTabIndicator = useRef(null);\n   const [selectedIndex, setSelectedIndex] = useState({\n    tab: 0\n  });\n\n  const propKeys = Object.keys(props);\n  let filteredMenuProps = propKeys.filter((key) => key.startsWith('heading')).map(menu=>menu);\n\n  let menuItems = filteredMenuProps.map((_, index) => {\n    return {\n      heading: props?.[`heading${index}`]?.props?.children || props?.[`heading`],\n      content: props?.[`content${index}`] ||  props?.[`content`],\n      image: props?.[`image${index}`] || props?.[`image`]\n    };\n  });\n\n  const positionSelectedTabIndicator = (index = selectedIndex.tab) => {\n    const selectedTab = tabs.filter((tab) => tab?.current)[index];\n    positionIndicator(selectedTabIndicator, selectedTab);\n  };\n\n  const handleOnChange = (index) => {\n    setSelectedIndex({\n      tab: index,\n    });\n    positionSelectedTabIndicator(index);\n  };\n\n\n  return (\n    <section\n      className={classNames(className, `tabsBlock spectrum--${theme}`)}\n      css={css`\n        background: var(--spectrum-global-color-gray-100);\n        max-width: 100%;\n        overflow-x:hidden !important;\n        margin: 0;\n        padding-bottom: calc(var(--spectrum-global-dimension-size-1250) + var(--spectrum-global-dimension-size-250));\n      `}\n      >\n      <div\n        className=\"tabs-wrapper\"\n        css={css`\n        display: ${orientation === 'vertical' ? 'inline-flex': ''};\n\n          @media only screen and (min-width: ${TABLET_SCREEN_WIDTH}) {\n            margin: 0 auto !important\n          }\n\n          @media screen and (max-device-width: ${MOBILE_SCREEN_WIDTH}) {\n            flex-direction: column;\n            // width:100%;\n          }\n        `}\n      >\n        <div\n          className=\"tabs-content\"\n          css={css`\n            display: ${orientation === 'vertical' ? 'grid': 'initial'};\n            position: relative;\n            grid-template-columns: 300px calc(100% - 300px);\n            margin-top: var(--spectrum-global-dimension-size-300);\n            // width:${layoutColumns(12)} !important;\n            width:${DESKTOP_SCREEN_WIDTH} !important;\n\n            @media only screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n              // display: initial !important;\n              width: 100% !important;\n            }\n\n            @media only screen and (device-width: ${TABLET_SCREEN_WIDTH}) {\n              width:${layoutColumns(8)} !important;\n            }\n          `}\n        >\n          {menuItems?.length > 0 ?\n            <Tabs\n              orientation={orientation}\n              isQuiet={true}\n              onFontsReady={positionSelectedTabIndicator}\n            >\n              {menuItems.map((data, index) => {\n                const ref = createRef();\n                tabs.push(ref);\n                const isSelected = selectedIndex.tab === index;\n                return (\n                  <>\n                  <Item\n                    className={'tabItem'}\n                    key={`tabItem_${index}`}\n                    tabIndex={0}\n                    ref={ref}\n                    isSelected={isSelected}\n                    aria-controls={`tabView${index}`}\n                    aria-label={data['heading']}\n                    label={<b>{data['heading']}</b>}\n                    icon={data['image']}\n                    onKeyDown={(e) => {\n                      if (e.key === 'ArrowDown' || e.key === 'Enter') {\n                        e.currentTarget.nextSibling && e.currentTarget.nextSibling.nextSibling.focus();\n                      }\n                      if (e.key === 'ArrowUp') {\n                        e.currentTarget.previousSibling && e.currentTarget.previousSibling.previousSibling.focus();\n                      }\n                    }}\n                    onFocus={() => {\n                      handleOnChange(index);\n                    }}\n                    onClick={() => {\n                      handleOnChange(index);\n                    }}\n\n                    css={css`\n                      text-align: left;\n                      white-space: normal;\n                      width: calc(var(--spectrum-global-dimension-size-2000) + var(--spectrum-global-dimension-size-600)) !important;\n                      font-size: var(--spectrum-global-dimension-size-200);\n                      margin-bottom: ${orientation === 'vertical' ? '1rem !important' : '0rem'};\n                      display: flex !important;\n                      padding: var(--spectrum-global-dimension-size-125) !important;\n                      height: auto !important;\n                      line-height: initial;\n\n                      .spectrum-Tabs-itemLabel{\n                        margin-top:5px;\n                        margin-bottom:5px;\n                      }\n                      .spectrum-Icon{\n                        background-size: var(--spectrum-global-dimension-size-225) var(--spectrum-global-dimension-size-275);\n                        width: var(--spectrum-global-dimension-size-500);\n                        height: var(--spectrum-global-dimension-size-400);\n                      }\n\n                      &.is-disabled {\n                        pointer-events:none;\n                      }\n                      &::before {\n                        left: var(--spectrum-global-dimension-size-0) !important;\n                        right: var(--spectrum-global-dimension-size-0) !important;\n                        border:none !important;\n                      }\n\n                      @media only screen and (max-width: ${mobileMinWidth}) {\n                        margin-top:var(--spectrum-global-dimension-size-25) !important;\n                        margin-bottom:var(--spectrum-global-dimension-size-25) !important;\n                      }\n\n                      @media only screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                        padding-left: var(--spectrum-global-dimension-size-0) !important;\n                      }\n                      @media only screen and (min-width: ${TABLET_SCREEN_WIDTH}) {\n                        width: calc(var(--spectrum-global-dimension-size-2000) + var(--spectrum-global-dimension-size-750)) !important;\n                        left: var(--spectrum-global-dimension-size-250) !important;\n                      }\n                    `}\n                  >\n                  </Item>\n                    <div\n                      key={`mobileTabView_${index}`}\n                      className=\"mobileTabView\"\n                      hidden={!isSelected}\n                      css={css`\n                        display: none;\n                        padding: var(--spectrum-global-dimension-size-0) !important;\n                        h3 {\n                          font-size:var(--spectrum-heading-s-text-size, var(--spectrum-alias-heading-s-text-size));\n                        }\n                        p {\n                          font-size: var(--spectrum-body-s-text-size, var(--spectrum-global-dimension-font-size-150))\n                        }\n                        @media only screen and (max-width: ${MAX_MOBILE_SCREEN_WIDTH}) {\n                          display: block;\n                        }\n                      `}\n                    >\n                      {data['content'] ? data['content'] : null}\n                    </div>\n                  </>\n                )\n              })}\n              <TabsIndicator ref={selectedTabIndicator} />\n              {APIReference !== \"\" && (\n                <div\n                  css={css`\n                    text-align: left;\n                    white-space: normal;\n                    width: calc(var(--spectrum-global-dimension-size-2500) + var(--spectrum-global-dimension-size-750)) !important;\n                    font-size: var(--spectrum-global-dimension-size-200);\n                    padding: var(--spectrum-global-dimension-size-125) !important;\n\n                    @media only screen and (max-width: ${mobileMinWidth}) {\n                      left: var(--spectrum-global-dimension-size-100) !important;\n                      margin-top: var(--spectrum-global-dimension-size-125) !important;\n                      margin-bottom: var(--spectrum-global-dimension-size-125) !important;\n                    }\n\n                    @media only screen and (min-width: ${TABLET_SCREEN_WIDTH}) {\n                      left: var(--spectrum-global-dimension-size-250) !important;\n                    }\n                  `}\n                >\n                  <span\n                    css={css`\n                      text-align: left;\n                      cursor: pointer;\n                      margin-top: var(--spectrum-global-dimension-size-85);\n                      margin-left: var(--spectrum-global-dimension-size-400);\n\n                      @media only screen and (max-width: ${mobileMinWidth}) {\n                        margin-left: var(--spectrum-global-dimension-size-100) !important;;\n                      }\n\n                      @media only screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                        margin-left: var(--spectrum-global-dimension-size-100) !important;;\n                      }\n                    `}\n                  >\n                    <a\n                      className=\"linking-accessbility\"\n                      href={APIReference}\n                      css={css`\n                        color: #4b9cf5;\n                      `}\n                      target={\"_blank\"}\n                      rel=\"noreferrer\"\n                    >\n                      API Reference\n                    </a>\n                  </span>\n                </div>\n              )}\n            </Tabs>\n          : null}\n          {menuItems?.length > 0 ?\n            menuItems.map((data, index) => {\n              const isHidden = selectedIndex.tab === index;\n              const contentData = data['content'];\n              contentData.props = {...contentData.props,index:selectedIndex.tab}\n              return(\n                <TabView\n                  key={`tabView_${index}`}\n                  id={`tabView${index}`}\n                  className={'tabView'}\n                  isHidden={!isHidden}\n                  css={css`\n                    text-align: left;\n                    padding: 0 0 var(--spectrum-global-dimension-size-100) 0 !important;\n                    max-width: ${layoutColumns(8.5)} !important;\n                    overflow-x: hidden !important;\n\n                    @media only screen and (max-width: ${mobileMinWidth}) {\n                      padding-left: inherit !important;\n                      max-width: ${layoutColumns(3)} !important;\n                    }\n\n                    @media only screen and (device-width: ${MOBILE_SCREEN_WIDTH}) {\n                      max-width: ${layoutColumns(3.5)} !important;\n                    }\n\n                    @media only screen and (device-width: ${TABLET_SCREEN_WIDTH}) {\n                      max-width: ${layoutColumns(6.5)} !important;\n                      padding-left:var(--spectrum-global-dimension-size-500);\n                    }\n\n                  `}\n                >\n                  { contentData }\n                </TabView>\n              )\n            })\n          : null}\n        </div>\n      </div>\n    </section>\n  )\n}\n\n\nTabs.propTypes = {\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  density: PropTypes.oneOf(['regular', 'compact']),\n  isQuiet: PropTypes.boolean,\n  className: PropTypes.string,\n};\n\nItem.propTypes = {\n  isSelected: PropTypes.boolean,\n  isDisabled: PropTypes.boolean,\n  className: PropTypes.string,\n  icon: PropTypes.element,\n  label: PropTypes.object\n};\n\nTabItemIcon.propTypes = {\n  elementType: PropTypes.string,\n  icon: PropTypes.element,\n  isSelected: PropTypes.boolean,\n  isDisabled: PropTypes.boolean,\n  iconSize: PropTypes.string,\n  className: PropTypes.string\n};\n\nTabView.propTypes = {\n  isHidden: PropTypes.boolean,\n  className: PropTypes.string\n};\n\nTabsBlock.propTypes = {\n  theme: PropTypes.oneOf(['light', 'dark', 'lightest']),\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  heading: PropTypes.string,\n  content: PropTypes.string,\n  image: PropTypes.string,\n  className: PropTypes.string,\n  APIReference: PropTypes.string,\n};\n\n\nexport { Tabs, Item, TabView, TabItemIcon, Label, TabsIndicator, positionIndicator, animateIndicator,CodeTabIndicator, TabsBlock,HeaderTabItem };\n"],"names":["positionIndicator","indicator","selectedTab","current","style","transform","offsetLeft","width","offsetWidth","animateIndicator","animate","transition","mobileMinWidth","setImageLoading","child","props","mdxType","cloneElement","loading","IconImage","image","styles","children","cloneChildren","css","Icons","icon","alt","Tabs","forwardRef","ref","orientation","density","isQuiet","className","onFontsReady","useEffect","document","fonts","ready","then","role","classNames","Item","elementType","isDisabled","isSelected","label","Element","title","disabled","TabItemIcon","Label","iconSize","setTabItemIcon","TabsIndicator","CodeTabIndicator","index","HeaderTabItem","hasDropdown","autofocus","tabIndex","onKeyDown","e","key","id","getElementById","focus","target","nextElementSibling","previousElementSibling","preventDefault","openDropDown","isOpen","console","log","TabView","isHidden","hidden","TabsBlock","theme","APIReference","tabs","useState","selectedTabIndicator","useRef","tab","selectedIndex","setSelectedIndex","menuItems","Object","keys","filter","startsWith","map","menu","_","heading","content","positionSelectedTabIndicator","handleOnChange","TABLET_SCREEN_WIDTH","MOBILE_SCREEN_WIDTH","DESKTOP_SCREEN_WIDTH","layoutColumns","length","data","createRef","push","currentTarget","nextSibling","previousSibling","onFocus","onClick","href","rel","contentData"],"sourceRoot":""}