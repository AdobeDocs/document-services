{"version":3,"sources":["webpack://dev-site-product-template/./src/@adobe/gatsby-theme-aio/components/Tabs/index.js"],"names":["positionIndicator","indicator","selectedTab","current","style","transform","offsetLeft","width","offsetWidth","animateIndicator","animate","transition","mobileMinWidth","setImageLoading","child","props","mdxType","cloneElement","loading","IconImage","image","styles","children","cloneChildren","css","Icons","icon","alt","Tabs","forwardRef","ref","orientation","density","isQuiet","className","onFontsReady","useEffect","document","fonts","ready","then","role","classNames","Item","elementType","isDisabled","isSelected","label","Element","id","nextId","disabled","TabItemIcon","Label","iconSize","setTabItemIcon","TabsIndicator","TabView","isHidden","hidden","TabsBlock","theme","APIReference","tabs","useState","selectedTabIndicator","useRef","tab","selectedIndex","setSelectedIndex","menuItems","Object","keys","filter","key","startsWith","map","menu","_","index","heading","content","positionSelectedTabIndicator","TABLET_SCREEN_WIDTH","DESKTOP_SCREEN_WIDTH","layoutColumns","MOBILE_SCREEN_WIDTH","length","data","createRef","push","itemPopoverId","tabIndex","onClick","href","target","rel"],"mappings":"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","file":"8bb409fd-e3f0576760d1865c5a34.js","sourcesContent":["/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Once Tabs block PR will merged with Adobe theme after that we will remove this component\n\nimport React, { useEffect, useState, useRef, createRef, forwardRef, cloneElement } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { css } from '@emotion/react';\nimport '@spectrum-css/tabs';\nimport nextId from 'react-id-generator';\n\nimport { cloneChildren, MOBILE_SCREEN_WIDTH, DESKTOP_SCREEN_WIDTH, TABLET_SCREEN_WIDTH, layoutColumns } from '@adobe/gatsby-theme-aio/src/utils';\n\nconst positionIndicator = (indicator, selectedTab) => {\n  indicator.current.style.transform = `translate(${selectedTab.current.offsetLeft}px, 0px)`;\n  indicator.current.style.width = `${selectedTab.current.offsetWidth}px`;\n};\n\nconst animateIndicator = (indicator, animate) => {\n  indicator.current.style.transition = animate ? '' : 'none';\n};\n\nconst setTabItemIcon = (child, className, iconSize) => {\n  if ( child?.props?.children?.props?.mdxType === 'img') {\n    return <IconImage image={child} className={classNames(className, `spectrum-Icon--spectrum-icon-size-${iconSize}`)}/>;\n  }\n  return <Icons icon={child} className={classNames(className, `spectrum-Icon--spectrum-icon-size-${iconSize}`)}/>;\n};\n\nconst mobileMinWidth = '480px';\n\nconst setImageLoading = (child) => {\n  if (child?.props?.mdxType === 'img') {\n    return cloneElement(child, {\n      loading: 'eager'\n    });\n  }\n  return child;\n};\n\nconst IconImage = ({ image = '', styles=''}) => {\n  return (image\n    ? cloneElement(image, {\n        children: cloneChildren(image.props.children, setImageLoading),\n        css: css`\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          height: 100%;\n          width: 100%;\n          margin-top: var(--spectrum-global-dimension-size-0);\n\n          img {\n            display: block;\n            object-fit: contain;\n          }\n          ${styles}\n        `,\n      })\n    : null);\n  }\n\nconst Icons = ({ icon, styles }) => {\n  return(\n    icon\n      ? cloneElement(icon, {\n        alt:'',\n        css: css`\n          height: var(--spectrum-global-dimension-size-600);\n          width: var(--spectrum-global-dimension-size-600);\n          margin-top: var(--spectrum-global-dimension-size-0);\n\n          img {\n            display: block;\n            object-fit: contain;\n          }\n          ${styles}\n        `\n      })\n      : null\n  )\n}\n\nconst Tabs = forwardRef(({\n  orientation='horizontal',\n  density='regular',\n  isQuiet = true,\n  children,\n  className,\n  onFontsReady,\n  ...props },\n  ref) => {\n\n  useEffect(() => {\n    // Font affects positioning of the Tab indicator\n    document.fonts.ready.then(() => {\n      onFontsReady && onFontsReady();\n    });\n  }, [onFontsReady]);\n\n  return (\n    <div\n      ref={ref}\n      {...props}\n      role='tablist'\n      aria-orientation={orientation}\n      className={classNames(className, 'spectrum-Tabs', `spectrum-Tabs--${orientation}`, { 'spectrum-Tabs--quiet' : isQuiet }, { 'spectrum-Tabs--compact': density === 'compact' })}\n    >\n      {children}\n    </div>\n  );\n});\n\nconst Item = forwardRef(({\n  elementType = 'div',\n  isDisabled=false,\n  isSelected=false,\n  className,\n  children,\n  icon,\n  label,\n  ...props }, ref\n) => {\n  const Element = elementType;\n  const id = nextId();\n  return (\n    <Element\n      {...props}\n      ref={ref}\n      role='tab'\n      aria-selected={isSelected}\n      disabled={isDisabled}\n      aria-controls={id}\n      className={classNames(className, 'spectrum-Tabs-item', { 'is-selected': isSelected }, { 'is-disabled': isDisabled })}>\n      {icon ? <TabItemIcon icon={icon} isSelected={isSelected} isDisabled={isDisabled}></TabItemIcon> : null }\n      {label ? <Label> {label} </Label>: null}\n      {children}\n    </Element>\n  );\n});\n\nconst TabItemIcon = forwardRef(({\n  elementType = 'div',\n  icon,\n  isSelected,\n  isDisabled,\n  className,\n  children,\n  iconSize='xl',\n  ...props }, ref) => {\n  const Element = elementType;\n  return (\n    <Element\n      {...props}\n      ref={ref}\n      className={classNames(className, 'spectrum-Icon', { 'is-selected': isSelected }, { 'is-disabled ': isDisabled })}\n      css={css`\n        height: var(--spectrum-global-dimension-size-600);\n        width: var(--spectrum-global-dimension-size-550);\n        z-index: 1;\n      `}\n      >\n      {icon ? setTabItemIcon(icon, className, iconSize) : null}\n    </Element>\n  );\n});\n\nconst TabsIndicator = forwardRef(({ className, ...props }, ref) => {\n  return (\n    <div\n      {...props}\n      ref={ref}\n      className={classNames(className, 'spectrum-Tabs-selectionIndicator')}\n      css={css`\n      transition-property: transform, width;\n    `}></div>\n  );\n});\n\nconst Label = ({ children }) => <span className='spectrum-Tabs-itemLabel'>{children}</span>;\n\nconst TabView = forwardRef(({ elementType = 'div', isHidden, className, children, ...props }, ref) => {\n  const Element = elementType;\n  return (\n    <Element\n      {...props}\n      ref={ref}\n      hidden={isHidden}\n      className={classNames(className)}>\n      {children}\n    </Element>\n  );\n});\n\nconst TabsBlock = ({\n  theme='light',\n  orientation='horizontal',\n  className,\n  APIReference = \"\",\n  ...props\n}) => {\n\n  const [tabs] = useState([]);\n  const selectedTabIndicator = useRef(null);\n   const [selectedIndex, setSelectedIndex] = useState({\n    tab: 0,\n  });\n\n  const propKeys = Object.keys(props);\n  let filteredMenuProps = propKeys.filter((key) => key.startsWith('heading')).map(menu=>menu);\n\n  let menuItems = filteredMenuProps.map((_, index) => {\n    return {\n      heading: props?.[`heading${index}`]?.props?.children || props?.[`heading`],\n      content: props?.[`content${index}`] ||  props?.[`content`],\n      image: props?.[`image${index}`] || props?.[`image`]\n    };\n  });\n\n  const positionSelectedTabIndicator = (index = selectedIndex.tab) => {\n    const selectedTab = tabs.filter((tab) => tab?.current)[index];\n    positionIndicator(selectedTabIndicator, selectedTab);\n  };\n  return (\n    <section\n      className={classNames(className, `tabsBlock spectrum--${theme}`)}\n      css={css`\n        background: var(--spectrum-global-color-gray-100);\n        max-width: 100%;\n        overflow-x:hidden !important;\n        margin: 0;\n        padding-bottom: calc(var(--spectrum-global-dimension-size-1250) + var(--spectrum-global-dimension-size-250));\n      `}\n      >\n      <div\n        css={css`\n        display: ${orientation === 'vertical' ? 'inline-flex': ''};\n          @media only screen and (min-width: ${TABLET_SCREEN_WIDTH}) {\n            max-width: ${DESKTOP_SCREEN_WIDTH};\n            margin: 0 auto !important\n          }\n          @media only screen and (max-width: ${mobileMinWidth}) {\n            flex-direction: column;\n          }\n        `}\n      >\n        <div\n          css={css`\n            display: ${orientation === 'vertical' ? 'grid': 'initial'};\n            position: relative;\n            grid-template-columns: 300px calc(100% - 300px);\n            margin-top: var(--spectrum-global-dimension-size-300);\n            width:${layoutColumns(12)} !important;\n            @media only screen and (max-width: ${mobileMinWidth}) {\n              display: initial !important;\n              width:${layoutColumns(2.5)} !important;\n            }\n            @media only screen and (device-width: ${MOBILE_SCREEN_WIDTH}) {\n              width:${layoutColumns(6.4)} !important;\n            }\n            @media only screen and (device-width: ${TABLET_SCREEN_WIDTH}) {\n              width:${layoutColumns(8)} !important;\n            }\n          `}\n        >\n          {menuItems?.length > 0 ?\n            <Tabs\n              orientation={orientation}\n              isQuiet={true}\n              onFontsReady={positionSelectedTabIndicator}\n            >\n              {menuItems.map((data, index) => {\n                const ref = createRef();\n                tabs.push(ref);\n                const isSelected = selectedIndex.tab === index;\n                const itemPopoverId = nextId();\n                return (\n                  <Item\n                    className={'tabItem'}\n                    key={`tabItem_${index}`}\n                    tabIndex={0}\n                    ref={ref}\n                    isSelected={isSelected}\n                    aria-controls={itemPopoverId}\n                    label={<b>{data['heading']}</b>}\n                    icon={data['image']}\n                    onClick={() => {\n                      setSelectedIndex({\n                        tab: index,\n                      });\n                      positionSelectedTabIndicator(index);\n                    }}\n                    css={css`\n                      text-align: left;\n                      white-space: normal;\n                      width: calc(var(--spectrum-global-dimension-size-2000) + var(--spectrum-global-dimension-size-600)) !important;\n                      font-size: var(--spectrum-global-dimension-size-200);\n                      margin-bottom: ${orientation === 'vertical' ? '2.4rem !important' : '0rem'};\n                      display: flex !important;\n                      padding: var(--spectrum-global-dimension-size-125) !important;\n                      height: auto !important;\n                      line-height: initial;\n\n                      .spectrum-Tabs-itemLabel{\n                        margin-top:5px;\n                        margin-bottom:5px;\n                      }\n                      .spectrum-Icon{\n                        background-size: var(--spectrum-global-dimension-size-225) var(--spectrum-global-dimension-size-275);\n                        width: var(--spectrum-global-dimension-size-500);\n                        height: var(--spectrum-global-dimension-size-400);\n                      }\n\n                      &.is-disabled {\n                        pointer-events:none;\n                      }\n                      &::before {\n                        left: var(--spectrum-global-dimension-size-0) !important;\n                        right: var(--spectrum-global-dimension-size-0) !important;\n                      }\n                      @media only screen and (max-width: ${mobileMinWidth}) {\n                        margin-top:var(--spectrum-global-dimension-size-25) !important;\n                        margin-bottom:var(--spectrum-global-dimension-size-25) !important;\n                      }\n                      @media only screen and (min-width: ${TABLET_SCREEN_WIDTH}) {\n                        width: calc(var(--spectrum-global-dimension-size-2000) + var(--spectrum-global-dimension-size-750)) !important;\n                        left: var(--spectrum-global-dimension-size-250) !important;\n                      }\n                    `}\n                  />\n                )\n              })}\n              <TabsIndicator ref={selectedTabIndicator} />\n              {APIReference !== \"\" && (\n                <div\n                  css={css`\n                    text-align: left;\n                    white-space: normal;\n                    width: calc(var(--spectrum-global-dimension-size-2500) + var(--spectrum-global-dimension-size-750)) !important;\n                    font-size: var(--spectrum-global-dimension-size-200);\n                    padding: var(--spectrum-global-dimension-size-125) !important;\n\n                    @media only screen and (max-width: ${mobileMinWidth}) {\n                      left: var(--spectrum-global-dimension-size-100) !important;\n                      margin-top: var(--spectrum-global-dimension-size-125) !important;\n                      margin-bottom: var(--spectrum-global-dimension-size-125) !important;\n                    }\n                    @media only screen and (min-width: ${TABLET_SCREEN_WIDTH}) {\n                      left: var(--spectrum-global-dimension-size-250) !important;\n                    }\n                  `}\n                >\n                  <span\n                    css={css`\n                      text-align: left;\n                      cursor: pointer;\n                      margin-top: var(--spectrum-global-dimension-size-85);\n                      margin-left: var(--spectrum-global-dimension-size-400);\n\n                      @media only screen and (max-width: ${mobileMinWidth}) {\n                        margin-left: var(--spectrum-global-dimension-size-100) !important;;\n                      }\n                      @media only screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                        margin-left: var(--spectrum-global-dimension-size-100) !important;;\n                      }\n                    `}\n                  >\n                    <a\n                      href={APIReference}\n                      css={css`\n                        color: #4b9cf5;\n                      `}\n                      target={\"_blank\"}\n                      rel=\"noreferrer\"\n                    >\n                      API Reference\n                    </a>\n                  </span>\n                </div>\n              )}\n            </Tabs>\n          : null}\n          {menuItems?.length > 0 ?\n            menuItems.map((data, index) => {\n              const isHidden = selectedIndex.tab === index;\n              return(\n                <TabView\n                  key={`tabView_${index}`}\n                  className={'tabView'}\n                  isHidden={!isHidden}\n                  css={css`\n                    text-align: left;\n                    padding: 0 0 var(--spectrum-global-dimension-size-100) 0 !important;\n                    max-width: ${layoutColumns(8.5)} !important;\n                    overflow-x: hidden !important;\n                    @media only screen and (max-width: ${mobileMinWidth}) {\n                      padding-left: inherit !important;\n                      max-width: ${layoutColumns(3)} !important;\n                    }\n\n                    @media only screen and (device-width: ${MOBILE_SCREEN_WIDTH}) {\n                      max-width: ${layoutColumns(3.5)} !important;\n                    }\n                    @media only screen and (device-width: ${TABLET_SCREEN_WIDTH}) {\n                      max-width: ${layoutColumns(6.5)} !important;\n                      padding-left:var(--spectrum-global-dimension-size-500);\n                    }\n\n                  `}\n                >\n                  {data['content'] ? data['content'] : null}\n                </TabView>\n              )\n            })\n          : null}\n        </div>\n      </div>\n    </section>\n  )\n}\n\n\nTabs.propTypes = {\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  density: PropTypes.oneOf(['regular', 'compact']),\n  isQuiet: PropTypes.boolean,\n  className: PropTypes.string,\n};\n\nItem.propTypes = {\n  isSelected: PropTypes.boolean,\n  isDisabled: PropTypes.boolean,\n  className: PropTypes.string,\n  icon: PropTypes.element,\n  label: PropTypes.object\n};\n\nTabItemIcon.propTypes = {\n  elementType: PropTypes.string,\n  icon: PropTypes.element,\n  isSelected: PropTypes.boolean,\n  isDisabled: PropTypes.boolean,\n  iconSize: PropTypes.string,\n  className: PropTypes.string\n};\n\nTabView.propTypes = {\n  isHidden: PropTypes.boolean,\n  className: PropTypes.string\n};\n\nTabsBlock.propTypes = {\n  theme: PropTypes.oneOf(['light', 'dark', 'lightest']),\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  heading: PropTypes.string,\n  content: PropTypes.string,\n  image: PropTypes.string,\n  className: PropTypes.string,\n  APIReference: PropTypes.string,\n};\n\n\nexport { Tabs, Item, TabView, TabItemIcon, Label, TabsIndicator, positionIndicator, animateIndicator, TabsBlock };\n"],"sourceRoot":""}