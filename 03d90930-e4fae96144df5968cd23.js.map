{"version":3,"file":"03d90930-e4fae96144df5968cd23.js","mappings":"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","sources":["webpack://dev-site-product-template/./src/@adobe/gatsby-theme-aio/components/Hero/index.js"],"sourcesContent":["\nimport React, { cloneElement, Children, useContext,useEffect } from \"react\";\nimport { withPrefix } from \"gatsby\";\nimport { css } from \"@emotion/react\";\nimport { AnchorButton } from \"@adobe/gatsby-theme-aio/src/components/AnchorButton\";\nimport \"@spectrum-css/typography\";\nimport PropTypes from \"prop-types\";\nimport {\n  getElementChild,\n  cloneChildren,\n  TABLET_SCREEN_WIDTH,\n  MOBILE_SCREEN_WIDTH,\n  DEFAULT_HOME,\n  findSelectedTopPage,\n  rootFixPages,\n  rootFix,\n  findSelectedTopPageMenu,\n} from \"@adobe/gatsby-theme-aio/src/utils\";\nimport Context from \"@adobe/gatsby-theme-aio/src/components/Context\";\nimport { Breadcrumbs } from \"@adobe/gatsby-theme-aio/src/components/Breadcrumbs\";\nimport classNames from \"classnames\";\n\nimport { DESKTOP_SCREEN_WIDTH } from \"../../../../utils\";\nimport AnimationVideo from \"../../../../pages/videos/Adobe_DCP_Marquee_Animation.json\";\nimport lottie from 'lottie-web';\n\n\nconst setImageLoading = (child) => {\n  if (child?.props?.mdxType === 'img') {\n    return cloneElement(child, {\n      loading: 'eager'\n    });\n  }\n\n  return child;\n};\n\nconst getAriaLabel = (label, heading='') => {\n  const labelVal = label === 'Learn more' && heading !=='' ? `${label} about ${heading}` : `${label}`;\n  return labelVal;\n}\n\nconst HeroButtons = ({ buttons, variants = ['cta', 'primary'], quiets = [true, true], className, heading='' }) =>\n  buttons ? (\n    <div>\n      <div\n        className={className}\n        css={css`\n          display: flex;\n          flex-wrap: wrap;\n          gap: var(--spectrum-global-dimension-size-200);\n        `}>\n        {Children.map(buttons.props.children, (item, i) => {\n          let variant = variants[0];\n          let quiet = quiets[0];\n\n          if (i > 0) {\n            variant = variants[1];\n            quiet = quiets[1];\n          }\n\n          const link = getElementChild(item);\n\n          return (\n            <div key={i}>\n              <AnchorButton aria-label={getAriaLabel(link.props.children, heading)} isQuiet={quiet} href={link.props.href} variant={variant}>\n                {link.props.children}\n              </AnchorButton>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  ) : null;\n\nconst HeroImage = ({ image, styles }) =>\n  image\n    ? cloneElement(image, {\n      children: cloneChildren(image.props.children, setImageLoading),\n      css: css`\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          height: 100%;\n          width: 100%;\n          margin-top: 0;\n          ${styles}\n\n          .gatsby-resp-image-wrapper {\n            max-width: none !important;\n            width: 100% !important;\n            height: 100% !important;\n          }\n\n          .gatsby-resp-image-image {\n            object-fit: cover;\n          }\n        `\n    })\n    : null;\n\nconst HeroTexts = ({ texts }) => {\n  const textKeys = Object.keys(texts).filter((key) => key.startsWith('text'));\n  return textKeys.map((textKey) =>\n    cloneElement(texts[textKey], {\n      className: 'spectrum-Body spectrum-Body--sizeL',\n      css: css`\n        &.spectrum-Body--sizeL {\n          margin-top: 0 !important;\n          color:#fff !important;\n\n          &:last-of-type {\n            margin-bottom: 0 !important;\n          }\n        }\n\n        @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n          padding: 0 var(--spectrum-global-dimension-size-115);\n        }\n      `\n    })\n  );\n};\n\nconst HeroHeading = ({ heading, variant, customLayout }) =>\n  heading\n    ? cloneElement(heading, {\n      // force h1 to support gdocs\n      mdxType: 'h1',\n      originalType: 'h1',\n      className:\n        (variant === 'default' || customLayout) ? customLayout ? 'spectrum-Heading--sizeXL spectrum-Heading--serif' : 'spectrum-Heading--sizeXL' : 'spectrum-Heading--sizeXXL spectrum-Heading--serif',\n      css: css`\n          margin-top: 0;\n          margin-bottom: var(--spectrum-global-dimension-size-200);\n\n          & + p {\n            margin-bottom: var(--spectrum-global-dimension-size-200);\n          }\n        `\n    })\n    : null;\n\nconst Hero = ({\n  className,\n  background,\n  theme = 'dark',\n  heading,\n  image,\n  icon,\n  buttons,\n  assetsImg,\n  variant = 'default',\n  containerHeight = 1000,\n  width = DESKTOP_SCREEN_WIDTH,\n  customLayout = false,\n  primaryOutline = false,\n  isPrimaryBtn=false,\n  variantsTypePrimary='cta',\n  variantsTypeSecondary='overBackground',\n  ...props\n}) => {\n  const { siteMetadata, location } = useContext(Context);\n\n  useEffect(()=>{\n    var anim = lottie.loadAnimation({\n      container: document.querySelector(\"#svgContainer\"), \n      renderer: \"svg\",\n      loop: false,\n      autoplay: true,\n      animationData: AnimationVideo\n        });\n\n        anim.addEventListener(\"enterFrame\", function (animation) {\n             if (animation.currentTime > (anim.totalFrames - 25)) {\n                anim.pause();\n             }\n        });\n  },[])\n\n\n  if (!variant || variant === 'default') {\n    const { home, pages } = siteMetadata;\n    const pathWithRootFix = rootFix(location.pathname);\n    const pagesWithRootFix = rootFixPages(pages);\n    const selectedTopPage = findSelectedTopPage(pathWithRootFix, pagesWithRootFix);\n    const selectedTopPageMenu = findSelectedTopPageMenu(pathWithRootFix, selectedTopPage);\n\n    return (\n      <section\n        className={classNames(className, `spectrum--${theme}`)}\n        css={css`\n          position: relative;\n          height: var(--spectrum-global-dimension-size-3400);\n          margin-bottom: var(--spectrum-global-dimension-size-400);\n          background-color: ${background ?? 'rgb( 29, 125, 238)'};\n          width: 100%;\n          display: flex;\n\n          @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n            overflow: auto;\n          }\n\n          @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n            height: calc(100vh - var(--spectrum-global-dimension-size-1200));\n          }\n        `}>\n        <HeroImage image={image} styles={`position: absolute;`} />\n        <div\n          css={css`\n            margin: auto;\n            display: flex;\n            position: relative;\n            height: 100%;\n            max-width: ${width};\n            flex-direction: row;\n            width: 100%;\n            align-items: center;\n\n            & > p {\n              margin-top: 0 !important;\n            }\n          `}>\n          <div\n            css={css`\n              width: calc(5 * 100% / 12);\n              position: absolute;\n              display: flex;\n              flex-direction: column;\n\n              & > p {\n                margin-top: var(--spectrum-global-dimension-size-225) !important;\n                margin-bottom: 0 !important;\n              }\n\n              @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                width: auto;\n                padding: 0 var(--spectrum-global-dimension-size-400);\n              }\n            `}>\n            {home?.hidden !== true && home?.title && home?.href && selectedTopPage && (\n              <Breadcrumbs\n                pages={[\n                  DEFAULT_HOME,\n                  home,\n                  { ...selectedTopPage, href: withPrefix(selectedTopPage.href) },\n                  selectedTopPageMenu && { ...selectedTopPageMenu, href: withPrefix(selectedTopPageMenu.href) }\n                ]}\n              />\n            )}\n\n            <HeroHeading heading={heading} variant={variant} />\n\n            <HeroTexts texts={props} />\n          </div>\n        </div>\n      </section>\n    );\n  } else {\n    const height = 'calc(var(--spectrum-global-dimension-size-6000) + var(--spectrum-global-dimension-size-1800))';\n    if (variant === 'fullwidth' && customLayout) {\n      return (\n        <section\n          className={classNames(className, `spectrum--${theme}`)}\n          css={css`\n            width: 100%;\n            background: ${background ?? \"var(--spectrum-global-color-gray-50)\"};\n\n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n              overflow: auto;\n            }\n\n            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n              .spectrum-Heading--sizeXL {\n                font-size: var(--spectrum-alias-heading-l-text-size);\n              }\n            }\n          `}\n        >\n          <HeroImage image={image} />\n\n          <div\n            css={css`\n              height: 100%;\n              top: 0;\n              bottom: 0;\n              width: 100%;\n              box-sizing: border-box;\n              padding: 0;\n              display: flex;\n              flex-direction: column;\n              align-items: center;\n              justify-content: flex-end;\n              text-align: center;\n\n              h1 {\n                padding: var(--spectrum-global-dimension-size-500) var(--spectrum-global-dimension-size-300) var(--spectrum-global-dimension-size-0) !important;\n              }\n\n              @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                padding: 0 !important;\n              }\n\n              @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                padding: 0 var(--spectrum-global-dimension-size-250);\n\n                h1 {\n                  padding: var(--spectrum-global-dimension-size-400) var(--spectrum-global-dimension-size-200) var(--spectrum-global-dimension-size-0) !important;\n                }\n              }\n            `}\n          >\n            {heading && (\n              <HeroHeading\n                heading={heading}\n                variant={variant}\n                customLayout={customLayout}\n              />\n            )}\n\n            <HeroTexts texts={props} />\n\n            {buttons ? (\n              <HeroButtons\n                buttons={buttons}\n                quiets={[!isPrimaryBtn, !primaryOutline]}\n                variants={[variantsTypePrimary,variantsTypeSecondary]}\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-200);\n                  margin-bottom: var(--spectrum-global-dimension-size-200);\n                `}\n              />\n            ) : (\n              <div\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-200);\n                `}\n              />\n            )}\n            <div className={assetsImg?.props?.children}/>\n          </div>\n        </section>\n      )\n    } else if(variant === 'video' && AnimationVideo){\n      return (\n        <section\n          className={classNames(className, `spectrum--${theme}`)}\n          css={css`\n            background: ${background ?? 'var(--spectrum-global-color-gray-50)'};\n            width: 100%;\n            overflow: hidden;\n            height: auto;\n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n              height: auto;\n              padding: var(--spectrum-global-dimension-size-400);\n              box-sizing: border-box;\n            }\n            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n              height: auto;\n              padding: var(--spectrum-global-dimension-size-400);\n              box-sizing: border-box;\n            }\n          `}>\n            <div css={css`\n              @media screen and (min-width: ${DESKTOP_SCREEN_WIDTH}) {\n                position: relative;\n                max-width:${DESKTOP_SCREEN_WIDTH}\n                margin:auto;\n              }\n            `}>\n              <div css={css`\n                @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                  display: none;\n                }\n              `}>\n              <div id=\"svgContainer\"></div>\n              </div>\n\n              <div\n                css={css`\n                  display: flex;\n                  height: 100%;\n                  max-width: ${width};\n                  margin: auto;\n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                    display: inline;\n                  }\n              `}>\n                <div\n                  css={css`\n                    display: flex;\n                    flex-direction: column;\n                    justify-content: center !important;\n                    position: absolute;\n                    padding: 0;\n                    top: 0;\n                    text-align: left;\n                    width: 30%;\n                    align-item:center;\n                    bottom: 0;\n                    box-sizing: border-box;\n\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      padding: 0 !important;\n                      width: 100% !important;\n                      position: initial !important;\n                    }\n\n                    @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                      padding: 0 var(--spectrum-global-dimension-size-100);\n                      width:100% !important;\n                      top: 20px !important;\n                      position: initial !important;\n                      h1 {\n                        padding: 0 var(--spectrum-global-dimension-size-200) 0 var(--spectrum-global-dimension-size-0) !important;\n                        font-size: var(--spectrum-heading-l-text-size, var(--spectrum-alias-heading-l-text-size))\n                      }\n                    }\n                `}>\n\n                  {heading && (\n                    <HeroHeading\n                      heading={heading}\n                      variant={variant}\n                      customLayout={customLayout}\n                    />\n                  )}\n\n                  <HeroTexts texts={props} />\n\n                  <HeroButtons\n                    buttons={buttons}\n                    quiets={[false]}\n                    variants={[\"primary\", \"overBackground\"]}\n                    css={css`\n                      margin-top: var(--spectrum-global-dimension-size-400);\n                    `}\n                  />\n                </div>\n                <div\n                  css={css`\n                    max-width: ${width};\n                    margin: auto;\n                    display: none;\n                    @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                      display: block;\n                    }\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      display: inline;\n                    }\n                `}>\n                <div className={assetsImg?.props?.children}/>\n              </div>\n            </div>\n          </div>\n        </section>\n      );\n    } else if (variant === 'halfwidth' && customLayout ) {\n      return (\n        <section\n          className={classNames(className, `spectrum--${theme}`)}\n          css={css`\n            background: ${background ?? 'var(--spectrum-global-color-gray-50)'};\n            width: 100%;\n            overflow: hidden;\n            height: auto;\n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n              height: auto;\n              padding: var(--spectrum-global-dimension-size-400);\n              box-sizing: border-box;\n            }\n            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n              height: auto;\n              padding: var(--spectrum-global-dimension-size-225);\n              box-sizing: border-box;\n            }\n        `}>\n          <div css={css`\n            @media screen and (min-width: ${DESKTOP_SCREEN_WIDTH}) {\n              display: flex;\n              justify-content: space-between;\n              position: relative;\n              max-width:${DESKTOP_SCREEN_WIDTH};\n              margin:auto;\n            }\n          `}>            \n            <div\n              css={css`\n                display: flex;\n                flex-direction: column;\n                justify-content: center !important;\n                // position: absolute;\n                padding: 0;\n                top: 0;\n                text-align: left;\n                width: 36%;\n                align-item:center;\n                bottom: 0;\n                box-sizing: border-box;\n\n                @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                  padding: 0 !important;\n                  width: 100% !important;\n                  position: initial !important;\n                }\n\n                @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                  padding: 0 var(--spectrum-global-dimension-size-100);\n                  width:100% !important;\n                  top: 20px !important;\n                  position: initial !important;\n                  h1 {\n                    padding: 0 var(--spectrum-global-dimension-size-200) 0 var(--spectrum-global-dimension-size-0) !important;\n                    font-size: var(--spectrum-heading-l-text-size, var(--spectrum-alias-heading-l-text-size))\n                  }\n                }\n            `}>                    \n            {icon &&\n              cloneElement(icon, {\n                children: cloneChildren(icon.props.children, setImageLoading),\n                css: css`\n                  height: var(--spectrum-global-dimension-size-400);\n                  width: var(--spectrum-global-dimension-size-3600);\n                  margin-top: 0 !important;\n                  margin-bottom: var(--spectrum-global-dimension-size-300) !important;\n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                    width: var(--spectrum-global-dimension-size-3000) !important;\n                  }\n                  .gatsby-resp-image-wrapper {\n                    max-width: none !important;\n                    width: 100% !important;\n                    height: 100% !important;\n                  }\n\n                  .gatsby-resp-image-image {\n                    height: 100%;\n                    object-fit: contain;\n                  }\n                `\n              })}\n\n                {heading && (\n                  <HeroHeading\n                    heading={heading}\n                    variant={variant}\n                    customLayout={customLayout}\n                  />\n                )}\n\n              <HeroTexts texts={props} />\n\n              <HeroButtons\n                buttons={buttons}\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-400);\n                `}\n                variants={[variantsTypePrimary, variantsTypeSecondary]}\n                quiets={[primaryOutline]}\n              />\n            </div>\n            <div>\n              <div className={assetsImg?.props?.children}/>\n            </div>\n          </div>\n        </section>\n      );\n    } else if (variant === 'fullwidth') {\n      return (\n        <section\n          className={classNames(className, `spectrum--${theme}`)}\n          css={css`\n            position: relative;\n            width: 100%;\n            height: ${height};\n            background: ${background ?? 'var(--spectrum-global-color-gray-50)'};\n\n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n              overflow: auto;\n            }\n\n            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n              height: 100vh;\n\n              .spectrum-Heading--sizeXXL {\n                font-size: var(--spectrum-alias-heading-xl-text-size);\n              }\n            }\n          `}>\n          <HeroImage image={image} />\n\n          <div\n            css={css`\n              height: 100%;\n              position: absolute;\n              top: 0;\n              width: 100%;\n              box-sizing: border-box;\n              padding: 0 calc(var(--spectrum-global-dimension-size-3600) + var(--spectrum-global-dimension-size-125));\n              display: flex;\n              flex-direction: column;\n              align-items: center;\n              justify-content: center;\n              text-align: center;\n\n              @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                padding: 0 var(--spectrum-global-dimension-size-400);\n              }\n            `}>\n            <HeroHeading heading={heading} variant={variant} />\n\n            <HeroTexts texts={props} />\n\n            <HeroButtons\n              buttons={buttons}\n              variants={['cta', 'overBackground']}\n              css={css`\n                margin-top: var(--spectrum-global-dimension-size-400);\n              `}\n            />\n            <div className={assetsImg?.props?.children}/>\n          </div>\n        </section>\n      );    \n    } else if (variant === 'halfwidth') {\n      return (\n        <section\n          className={classNames(className, `spectrum--lightest`)}\n          css={css`\n            background: ${background ?? 'var(--spectrum-global-color-gray-50)'};\n            width: 100%;\n            height: ${height};\n            overflow: hidden;\n\n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n              height: auto;\n              padding: var(--spectrum-global-dimension-size-400);\n              box-sizing: border-box;\n            }\n          `}>\n          <div\n            css={css`\n              display: flex;\n              height: 100%;\n              justify-content: center;\n            `}>\n            <div\n              css={css`\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                width: calc(5 * 100% / 12);\n                margin-left: var(--spectrum-global-dimension-size-800);\n                margin-right: var(--spectrum-global-dimension-size-400);\n\n                @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                  width: 100%;\n                  margin: 0;\n                }\n              `}>\n              {icon &&\n                cloneElement(icon, {\n                  children: cloneChildren(icon.props.children, setImageLoading),\n                  css: css`\n                    height: var(--spectrum-global-dimension-size-600);\n                    width: var(--spectrum-global-dimension-size-600);\n                    margin-top: 0 !important;\n                    margin-bottom: var(--spectrum-global-dimension-size-300) !important;\n\n                    .gatsby-resp-image-wrapper {\n                      max-width: none !important;\n                      width: 100% !important;\n                      height: 100% !important;\n                    }\n\n                    .gatsby-resp-image-image {\n                      height: 100%;\n                      object-fit: contain;\n                    }\n                  `\n                })}\n\n              <HeroHeading heading={heading} isVariant />\n\n              <HeroTexts texts={props} />\n\n              <HeroButtons\n                buttons={buttons}\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-400);\n                `}\n              />\n            </div>\n            <div\n              css={css`\n                flex: 1;\n\n                @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                  display: none;\n                }\n              `}>\n              <HeroImage image={image} />\n            </div>\n          </div>\n        </section>\n      );\n    }\n  }\n};\n\nHero.propTypes = {\n  background: PropTypes.string,\n  heading: PropTypes.element,\n  text: PropTypes.element,\n  image: PropTypes.element,\n  icon: PropTypes.element,\n  buttons: PropTypes.element,\n  variant: PropTypes.string,\n  width: PropTypes.string,\n  theme: PropTypes.string,\n  customLayout: PropTypes.bool,\n  assetsImg:PropTypes.element,\n};\n\nHeroButtons.propTypes = {\n  buttons: PropTypes.element,\n  variants: PropTypes.array,\n  quiets: PropTypes.array\n};\n\nHeroImage.propTypes = {\n  image: PropTypes.element\n};\n\nexport { Hero, HeroImage, HeroButtons };\n"],"names":["setImageLoading","child","props","mdxType","cloneElement","loading","getAriaLabel","label","heading","HeroButtons","buttons","variants","quiets","className","css","Children","children","item","i","variant","quiet","link","getElementChild","key","A","isQuiet","href","HeroImage","image","styles","cloneChildren","HeroTexts","texts","Object","keys","filter","startsWith","map","textKey","MOBILE_SCREEN_WIDTH","HeroHeading","customLayout","originalType","Hero","background","theme","icon","assetsImg","containerHeight","width","DESKTOP_SCREEN_WIDTH","primaryOutline","isPrimaryBtn","variantsTypePrimary","variantsTypeSecondary","useContext","Context","siteMetadata","location","useEffect","anim","lottie","container","document","querySelector","renderer","loop","autoplay","animationData","AnimationVideo","addEventListener","animation","currentTime","totalFrames","pause","home","pages","pathWithRootFix","rootFix","pathname","pagesWithRootFix","rootFixPages","selectedTopPage","findSelectedTopPage","selectedTopPageMenu","findSelectedTopPageMenu","classNames","hidden","title","DEFAULT_HOME","withPrefix","height","TABLET_SCREEN_WIDTH","id","isVariant"],"sourceRoot":""}